{"version":3,"sources":["hooks/useLocalStorage.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css"],"names":["useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactForm","onSubmit","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","className","Styles","form","preventDefault","label","type","pattern","title","required","onChange","input1","input2","button","ContactList","contacts","onDeleteContact","list","map","id","li","onClick","Filter","input","App","setContacts","filter","setFilter","visibleContacts","normalizeFilter","toLowerCase","contact","includes","getVisibleContacts","container","h1","find","alert","prevState","uuidv4","h2","length","e","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.855d1093.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={Styles.form} onSubmit={handleSubmit}>\r\n      <label className={Styles.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          className={Styles.input1}\r\n        />\r\n      </label>\r\n\r\n      <label className={Styles.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          className={Styles.input2}\r\n        />\r\n      </label>\r\n      <button className={Styles.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={Styles.list}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={Styles.li}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}\r\n              className={Styles.button}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\r\n    .isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={Styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={Styles.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport useLocalStorage from '../src/hooks/useLocalStorage';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Styles from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert('Attempt to create existing contact!');\n      return;\n    }\n\n    setContacts(prevState => [...prevState, { id: uuidv4(), name, number }]);\n  };\n\n  const deleteContact = id => {\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div className={Styles.container}>\n      <h1 className={Styles.h1}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className={Styles.h2}>Contacts</h2>\n      {visibleContacts.length >= 1 && (\n        <Filter value={filter} onChange={changeFilter} />\n      )}\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Y6p9\",\"label\":\"ContactForm_label__tMYbd\",\"button\":\"ContactForm_button__9h7Td\",\"input1\":\"ContactForm_input1__oVL0I\",\"input2\":\"ContactForm_input2__11TcP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__17jZE\",\"li\":\"ContactList_li__1JexI\",\"button\":\"ContactList_button__33rnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__12cVU\",\"h1\":\"App_h1__rXdi1\",\"h2\":\"App_h2__1sVDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2QdWm\",\"input\":\"Filter_input__17a_2\"};"],"sourceRoot":""}